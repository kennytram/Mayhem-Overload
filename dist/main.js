/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./mayhem_overload/microgame.js":
/*!**************************************!*\
  !*** ./mayhem_overload/microgame.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _stage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stage */ \"./mayhem_overload/stage.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite */ \"./mayhem_overload/sprite.js\");\n\n\nclass Microgame {\n  constructor(stage, player, obstacles, bgm, objective, controlSetting) {\n    this.stage = stage;\n    this.player = player;\n    this.obstacles = obstacles || [];\n    this.bgm = bgm;\n    this.objective = objective;\n    this.won = false;\n    this.isGameOver = false;\n    this.controlSetting = controlSetting;\n    this.barAmount = 0;\n    this.count = 0; //bandaid fix;\n    this.ddrAnswers = [];\n  }\n  reset(ctx) {\n    this.won = false;\n    this.isGameOver = false;\n    this.barAmount = 0;\n    this.count = 0;\n    this.ddrAnswers = [];\n    this.player.reset(ctx);\n    for (const obstacle of this.obstacles) obstacle.reset(ctx, this.player);\n  }\n  stageAnimate(stageCtx) {\n    if (this.won === false) {\n      this.stage.animate(stageCtx);\n    }\n  }\n  fillBar() {\n    this.barAmount += this.player.mash();\n  }\n  changeSprite(objective) {\n    if (objective === \"blowBar\") {\n      if (this.barAmount >= 100) {\n        this.player.sprite = progressImg['blowBar'][5];\n        this.won = true;\n      } else if (this.barAmount >= 80) {\n        this.player.sprite = progressImg['blowBar'][4];\n      } else if (this.barAmount >= 60) {\n        this.player.sprite = progressImg['blowBar'][3];\n      } else if (this.barAmount >= 40) {\n        this.player.sprite = progressImg['blowBar'][2];\n      } else if (this.barAmount >= 20) {\n        this.player.sprite = progressImg['blowBar'][1];\n      } else {\n        this.player.sprite = progressImg['blowBar'][0];\n      }\n    } else if (objective === 'survive') {\n      for (const obstacle of this.obstacles) {\n        const idx = progressImg['star'].indexOf(obstacle.sprite);\n        obstacle.sprite = progressImg['star'][(idx + 1) % progressImg['star'].length];\n      }\n      if (this.count === 0) {\n        const that = this;\n        setTimeout(function () {\n          if (that.player.isAlive) {\n            that.won = true;\n          }\n        }, 5000);\n      }\n      this.count += 1;\n    } else if (objective === 'ddr') {\n      const that = this;\n      const dirs = ['up', 'down', 'left', 'right'];\n      if (this.ddrAnswers.length === 0) that.obstacles[0].sprite = null;\n      while (this.ddrAnswers.length < 4) {\n        this.ddrAnswers.push(dirs[Math.floor(Math.random() * dirs.length)]);\n        setTimeout(function () {\n          that.obstacles[0].sprite = ddrArrows[that.ddrAnswers[that.count]][that.count];\n          that.count++;\n        }, 400 * this.ddrAnswers.length);\n      }\n      if (this.ddrAnswers.length === 4) {\n        if (this.player.userInputs.length < 4) {\n          switch (this.player.userInputs.at(-1)) {\n            case \"up\":\n              this.player.sprite = progressImg['ddr'][0];\n              break;\n            case 'down':\n              this.player.sprite = progressImg['ddr'][1];\n              break;\n            case 'left':\n              this.player.sprite = progressImg['ddr'][2];\n              break;\n            case 'right':\n              this.player.sprite = progressImg['ddr'][3];\n              break;\n            default:\n              this.player.sprite = progressImg['ddr'][6];\n          }\n        } else {\n          if (JSON.stringify(this.player.userInputs) === JSON.stringify(this.ddrAnswers)) {\n            this.player.sprite = progressImg['ddr'][4];\n            this.won = true;\n          } else {\n            this.player.sprite = progressImg['ddr'][5];\n            this.isGameOver = true;\n          }\n        }\n      }\n    }\n  }\n  spriteAnimate(spriteCtx) {\n    if (this.won === false && !this.isGameOver) {\n      if (!this.player.isAlive) {\n        this.isGameOver = true;\n      }\n      this.changeSprite(this.objective);\n      for (const obstacle of this.obstacles) {\n        obstacle.animate(spriteCtx, this.ddrAnswers);\n        if (obstacle.unitTypeArr.includes('enemy') && obstacle.collidesWith(this.player)) {\n          this.player.isAlive = false;\n          this.player.sprite = '../src/space_balloon_images/space_balloon_death.png';\n        }\n      }\n      this.player.animate(spriteCtx);\n    }\n  }\n}\nvar progressImg = {\n  blowBar: ['../src/blow_images/blow1.png', '../src/blow_images/blow2.png', '../src/blow_images/blow3.png', '../src/blow_images/blow4.png', '../src/blow_images/blow5.png', '../src/blow_images/blow6.png'],\n  spaceBalloon: ['../src/space_balloon_images/flap_default.png', '../src/space_balloon_images/flap_down.png', '../src/space_balloon_images/flap_up.png'],\n  star: ['../src/space_balloon_enemies/space_balloon_star1.png', '../src/space_balloon_enemies/space_balloon_star2.png', '../src/space_balloon_enemies/space_balloon_star3.png', '../src/space_balloon_enemies/space_balloon_star4.png'],\n  ddr: ['../src/ddr/up.png', '../src/ddr/down.png', '../src/ddr/left.png', '../src/ddr/right.png', '../src/ddr/victory.png', '../src/ddr/defeat.png', '../src/ddr/neutral.png']\n};\nvar ddrArrows = {\n  up: ['../src/ddr_dirs/up_arrow1.png', '../src/ddr_dirs/up_arrow2.png', '../src/ddr_dirs/up_arrow3.png', '../src/ddr_dirs/up_arrow4.png'],\n  down: ['../src/ddr_dirs/down_arrow1.png', '../src/ddr_dirs/down_arrow2.png', '../src/ddr_dirs/down_arrow3.png', '../src/ddr_dirs/down_arrow4.png'],\n  left: ['../src/ddr_dirs/left_arrow1.png', '../src/ddr_dirs/left_arrow2.png', '../src/ddr_dirs/left_arrow3.png', '../src/ddr_dirs/left_arrow4.png'],\n  right: ['../src/ddr_dirs/right_arrow1.png', '../src/ddr_dirs/right_arrow2.png', '../src/ddr_dirs/right_arrow3.png', '../src/ddr_dirs/right_arrow4.png']\n};\nlet CONSTANTS = {\n  GRAVITY: 1,\n  FLAP_SPEED: 5,\n  TERMINAL_VEL: 5,\n  BAR_SPEED: 5\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Microgame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./mayhem_overload/microgame.js\n");

/***/ }),

/***/ "./mayhem_overload/microgame_board.js":
/*!********************************************!*\
  !*** ./mayhem_overload/microgame_board.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _microgame__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./microgame */ \"./mayhem_overload/microgame.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite */ \"./mayhem_overload/sprite.js\");\n/* harmony import */ var _stage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stage */ \"./mayhem_overload/stage.js\");\n\n\n\nclass MicrogameBoard {\n  constructor() {\n    // this.stageCtx = document.getElementById('stage_canvas').getContext('2d');\n    // this.spriteCtx = document.getElementById('sprite_canvas').getContext('2d');\n    this.ctx = document.getElementById('canvas').getContext('2d');\n    // this.size = (Math.floor(this.stageCtx.canvas.width/100), Math.floor(this.stageCtx.canvas.height/100));\n    this.currTime = 10;\n    this.maxTime = 10;\n    this.score = 0; //temporary variable until we decide to make a larger version of this game\n    this.lives = 3;\n    this.microgame = null;\n    this.running = false;\n    this.currMicrogameFinished = false;\n    this.restart = false;\n  }\n\n  //Status: COMPLETED\n  play() {\n    this.microgame = this.randomizeMicrogame();\n    if (this.microgame) {\n      this.running = true;\n      this.microgame.reset(this.ctx);\n      unbindKeys(); //in case if user refreshes\n      this.bindKeyHandlers(this.microgame);\n      // this.startMicrogame(); //start Timer and this.running itself\n      // this.microgame.stageAnimate(this.ctx);\n      this.animate();\n    } else {\n      console.log(\"NO MICROGAME WAS SELECTED\");\n    }\n  }\n\n  //Status: COMPLETED\n  randomizeMicrogame() {\n    const microgames = Object.values(MICROGAMES);\n    const microgameIdx = Math.floor(Math.random() * microgames.length);\n    microgames[microgameIdx].reset(this.ctx);\n    currBGM = microgames[microgameIdx].bgm;\n    if (!isMuted && currBGM) currBGM.play();\n    audioArr.push(microgames[microgameIdx].bgm);\n    return microgames[microgameIdx];\n  }\n\n  //COMPLETED\n  animate() {\n    if (this.running === true) {\n      if (!this.currMicrogameFinished && this.microgame.won === true || this.restart === true) {\n        unbindKeys();\n        this.microgame.won = false;\n        if (!this.restart) this.incrementScore();\n        this.currMicrogameFinished = true;\n        if (victoryAudio.paused && !isMuted && !this.restart) {\n          for (const audio of audioArr) {\n            audio.pause();\n            audio.currentTime = 0;\n          }\n          victoryAudio.play();\n        }\n        this.restart = false;\n        //pop out BGM\n        audioArr.pop();\n        const that = this;\n        // cancelAnimationFrame(request);\n        // console.log(this.score);\n        setTimeout(function () {\n          that.microgame = that.randomizeMicrogame();\n          that.bindKeyHandlers(that.microgame);\n          // that.microgame.stageAnimate(that.ctx);\n          that.resetTimer();\n          that.currMicrogameFinished = false;\n          // that.microgame.spriteAnimate(that.ctx);\n        }, 2500);\n      } else if (this.microgame.isGameOver === true) {\n        unbindKeys();\n        currBGM = null;\n        for (const audio of audioArr) {\n          audio.pause();\n          audio.currentTime = 0;\n        }\n        if (this.microgame.controlSetting === 'flap') {\n          if (!isMuted) spaceDeathAudio.play();\n        }\n        if (!isMuted) gameoverAudio.play();\n        this.running = false;\n        console.log(this.score);\n      } else if (this.currTime > 0 && !this.currMicrogameFinished) {\n        this.microgame.stageAnimate(this.ctx);\n        this.microgame.spriteAnimate(this.ctx);\n      }\n      window.requestAnimationFrame(this.animate.bind(this));\n      // request;\n    }\n  }\n\n  //incomplete for now to readjust for timer\n  incrementScore() {\n    this.score++;\n  }\n  startMicrogame() {\n    setInterval(this.reduceTime.bind(this), 1000);\n    this.microgame.running = true;\n  }\n  setMicrogame(microgame) {\n    this.microgame = microgame;\n  }\n  reduceMaxTimer() {\n    this.maxTime--;\n  }\n  reduceTime() {\n    while (this.currTime > 0) {\n      this.currTime--;\n    }\n  }\n  resetTimer() {\n    this.currTime = 10;\n  }\n\n  //COMPLETED except restart\n  bindKeyHandlers(microgame) {\n    key('q', () => {\n      window.location.reload();\n    });\n    switch (microgame.controlSetting) {\n      case \"test\":\n        key('w', () => this.microgame.player.move([0, -this.ctx.canvas.height / 50], this.ctx));\n        key('s', () => this.microgame.player.move([0, this.ctx.canvas.height / 50], this.ctx));\n        key('a', () => this.microgame.player.move([-this.ctx.canvas.width / 50, 0], this.ctx));\n        key('d', () => this.microgame.player.move([this.ctx.canvas.width / 50, 0], this.ctx));\n        key('up', () => this.microgame.player.move([0, -this.ctx.canvas.height / 50], this.ctx));\n        key('down', () => this.microgame.player.move([0, this.ctx.canvas.height / 50], this.ctx));\n        key('left', () => this.microgame.player.move([-this.ctx.canvas.width / 50, 0], this.ctx));\n        key('right', () => this.microgame.player.move([this.ctx.canvas.width / 50, 0], this.ctx));\n        key('space', () => this.microgame.player.jump());\n        bindKeys.push('w', 's', 'a', 'd', 'up', 'down', 'left', 'right', 'space');\n        break;\n      case \"spaceButtonMash\":\n        key('space', () => {\n          this.microgame.fillBar();\n          if (blowAudio.paused && !isMuted) blowAudio.play();\n        });\n        bindKeys.push('space');\n        break;\n      case \"flap\":\n        if (this.microgame) this.microgame.player.isMidAir = true;\n        key('a', () => this.microgame.player.move([-this.ctx.canvas.width / 60, 0], this.ctx));\n        key('d', () => this.microgame.player.move([this.ctx.canvas.width / 60, 0], this.ctx));\n        key('left', () => this.microgame.player.move([-this.ctx.canvas.width / 60, 0], this.ctx));\n        key('right', () => this.microgame.player.move([this.ctx.canvas.width / 60, 0], this.ctx));\n        key('space', () => {\n          this.microgame.player.flap();\n          if (!isMuted) {\n            spaceBalloonAudio.currentTime = 0;\n            spaceBalloonAudio.play();\n          }\n        });\n        bindKeys.push('a', 'd', 'left', 'right', 'up', 'down', 'space');\n        break;\n      case \"directions\":\n        key('w', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('up');\n        });\n        key('s', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('down');\n        });\n        key('a', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('left');\n        });\n        key('d', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('right');\n        });\n        key('up', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('up');\n        });\n        key('down', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('down');\n        });\n        key('left', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('left');\n        });\n        key('right', () => {\n          if (!isMuted) {\n            selectAudio.currentTime = 0;\n            selectAudio.play();\n          }\n          this.microgame.player.ddr('right');\n        });\n        bindKeys.push('w', 's', 'a', 'd', 'up', 'down', 'left', 'right');\n        break;\n      default:\n        console.log(\"keybind error\");\n    }\n  }\n}\nconst STAGES = {\n  test: new _stage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('../src/windrise-background.png', false),\n  blow: new _stage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('../src/blow.png', false),\n  spaceBalloon: new _stage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('../src/space_balloon_background_og.png', true),\n  ddr: new _stage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('../src/dfloor.png', false)\n};\nconst PLAYERS = {\n  test: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](null, 'random', ['player']),\n  blow: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/blow_images/blow1.png', 'wallRight', ['player']),\n  spaceBalloon: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_images/flap_default.png', 'rightSide', ['player']),\n  ddr: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/ddr/neutral.png', 'bottomSide', ['player'])\n};\nconst OBSTACLES = {\n  test: [],\n  blow: [],\n  spaceBalloon: [new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star1.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star2.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star3.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star4.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star1.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star2.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star3.png', 'random', ['enemy', 'movingRight']), new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/space_balloon_enemies/space_balloon_star4.png', 'random', ['enemy', 'movingRight'])],\n  ddr: [new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('../src/ddr_dirs/up_arrow1.png', 'topLeft', ['friendly'])]\n};\nconst KEYS = {\n  test: \"test\",\n  blow: \"spaceButtonMash\",\n  spaceBalloon: \"flap\",\n  ddr: \"directions\"\n};\nconst MICROGAMES = {\n  // test: new Microgame(STAGES[\"test\"]\n  // , PLAYERS['test']\n  // , OBSTACLES['test'], null, null, KEYS[\"test\"]),\n  blow: new _microgame__WEBPACK_IMPORTED_MODULE_0__[\"default\"](STAGES['blow'], PLAYERS['blow'], OBSTACLES['blow'], new Audio(\"../src/bgm/thar_he_blows.mp3\"), \"blowBar\", KEYS[\"blow\"]),\n  spaceBalloon: new _microgame__WEBPACK_IMPORTED_MODULE_0__[\"default\"](STAGES['spaceBalloon'], PLAYERS['spaceBalloon'], OBSTACLES['spaceBalloon'], new Audio(\"../src/bgm/space_balloon.mp3\"), \"survive\", KEYS[\"spaceBalloon\"]),\n  ddr: new _microgame__WEBPACK_IMPORTED_MODULE_0__[\"default\"](STAGES['ddr'], PLAYERS['ddr'], OBSTACLES['ddr'], new Audio(\"../src/bgm/dance.mp3\"), \"ddr\", KEYS['ddr'])\n};\nvar victoryAudio = new Audio('../src/victory.mp3');\nvar blowAudio = new Audio('../src/blow.ogg');\nvar spaceBalloonAudio = new Audio('../src/flap.mp3');\nvar spaceDeathAudio = new Audio('../src/balloon_burst.mp3');\nvar gameoverAudio = new Audio('../src/gameover.mp3');\nvar correctAudio = new Audio('../src/correct.mp3');\nvar wrongAudio = new Audio('../src/wrong.mp3');\nvar selectAudio = new Audio('../src/dance_select.mp3');\nconst audioArr = [victoryAudio, blowAudio, spaceBalloonAudio, spaceDeathAudio, gameoverAudio, correctAudio, wrongAudio, selectAudio];\nvar currBGM = null;\nvar isMuted = false;\nvar bindKeys = ['m', 'q'];\nkey('m', () => {\n  isMuted = !isMuted;\n  for (const audio of audioArr) audio.pause();\n  if (!isMuted && currBGM === audioArr.at(-1)) {\n    audioArr.at(-1).play();\n  }\n});\nfunction unbindKeys() {\n  while (bindKeys.length > 2) {\n    key.unbind(bindKeys.pop());\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MicrogameBoard);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./mayhem_overload/microgame_board.js\n");

/***/ }),

/***/ "./mayhem_overload/sprite.js":
/*!***********************************!*\
  !*** ./mayhem_overload/sprite.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Sprite {\n  constructor(sprite, posType, unitTypeArr) {\n    this.xPos = 0;\n    this.yPos = 0;\n    this.sprite = sprite;\n    this.posType = posType;\n    this.unitTypeArr = unitTypeArr;\n    this.isAlive = true;\n    this.spriteWidth = null;\n    this.spriteHeight = null;\n    this.vel = 0;\n    this.isMidAir = false;\n    this.userInputs = [];\n  }\n  initializeSpritePos(ctx) {\n    let player = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (this.posType === 'rightSide') {\n      this.xPos = Math.floor(ctx.canvas.width - ctx.canvas.width / 3);\n      this.yPos = Math.floor(ctx.canvas.height / 4);\n      CONSTANTS.GRAVITY = Math.floor(ctx.canvas.width / 1000);\n      CONSTANTS.FLAP_SPEED = Math.floor(ctx.canvas.height / 80);\n      CONSTANTS.TERMINAL_VEL = Math.floor(ctx.canvas.height / 80);\n    } else if (this.posType === 'bottomSide') {\n      this.xPos = Math.floor(ctx.canvas.width / 2);\n      this.yPos = ctx.canvas.height;\n    } else if (this.posType === 'topLeft') {\n      this.xPos = 0;\n      this.yPos = 0;\n    } else if (this.posType === 'random' && this.unitTypeArr.includes('enemy')) {\n      if (player != null) {\n        do {\n          this.xPos = ctx.canvas.width * Math.random();\n        } while (Math.abs(this.xPos - player.xPos) <= ctx.canvas.width / 4);\n        do {\n          this.yPos = ctx.canvas.height * Math.random();\n        } while (Math.abs(this.yPos - player.yPos) <= ctx.canvas.height / 4);\n      } else {\n        this.xPos = ctx.canvas.width * Math.random() - ctx.canvas.width;\n        this.yPos = ctx.canvas.height * Math.random();\n      }\n    }\n  }\n  reset(ctx) {\n    let player = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n    this.isMidAir = false;\n    this.isAlive = true;\n    this.userInputs = [];\n    this.initializeSpritePos(ctx, player);\n  }\n  animate(ctx) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let foundArr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    if (this.sprite) {\n      if (this.isMidAir) this.moveAir(ctx);\n      let image = new Image();\n      image.src = this.sprite;\n      const that = this;\n      image.onload = function () {\n        that.spriteWidth = image.width;\n        that.spriteHeight = image.height;\n\n        // when we decide to have multiple canvases \n        // ctx.clearRect(that.xPos, that.yPos, that.spriteWidth, that.spriteHeight);\n        // ctx.clearRect(0,0, ctx.canvas.width, ctx.canvas.height);\n\n        if (that.posType.includes('wall')) {\n          that.xPos = ctx.canvas.width - that.spriteWidth;\n          that.spriteHeight = ctx.canvas.height;\n          // ctx.clearRect(0,0, ctx.canvas.width, ctx.canvas.height);\n          ctx.drawImage(image, that.xPos, 0, that.spriteWidth, that.spriteHeight);\n        } else if (that.posType.includes('rightSide')) {\n          that.spriteWidth = image.width * 3;\n          that.spriteHeight = image.height * 3;\n          if (that.isAlive) {\n            ctx.drawImage(image, that.xPos + that.spriteWidth, that.yPos, that.spriteWidth, that.spriteHeight);\n          } else {\n            // that.clearSpace(ctx);\n            ctx.drawImage(image, Math.floor(that.xPos + that.spriteWidth / 3), that.yPos, that.spriteWidth, that.spriteHeight);\n          }\n        } else if (that.posType.includes('bottomSide')) {\n          that.spriteWidth = image.width * 3;\n          that.spriteHeight = image.height * 3;\n          ctx.drawImage(image, Math.floor(that.xPos - that.spriteWidth / 2), that.yPos - that.spriteHeight, that.spriteWidth, that.spriteHeight);\n        } else if (that.posType.includes('topLeft')) {\n          that.spriteWidth = image.width;\n          that.spriteHeight = image.height;\n          ctx.drawImage(image, that.xPos, that.yPos, that.spriteWidth, that.spriteHeight);\n          ctx.drawImage(image, ctx.canvas.width - that.spriteWidth, that.yPos, that.spriteWidth, that.spriteHeight);\n        } else if (that.unitTypeArr.includes('enemy') && that.posType.includes('random')) {\n          that.spriteWidth = image.width * 3;\n          that.spriteHeight = image.height * 3;\n          that.xPos += 3;\n          if (that.xPos >= ctx.canvas.width + that.spriteWidth) {\n            that.initializeSpritePos(ctx);\n          }\n          ctx.drawImage(image, that.xPos + that.spriteWidth, that.yPos, that.spriteWidth, that.spriteHeight);\n        } else {\n          ctx.drawImage(image, that.xPos + image.width, that.yPos + image.height, ctx.canvas.width / 10, ctx.canvas.height / 10);\n        }\n      };\n    }\n    // for testing purposes\n    // else {\n    //     ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    //     ctx.fillStyle = \"black\";\n    //     this.spriteWidth = ctx.canvas.width/10;\n    //     this.spriteHeight = ctx.canvas.height/10;\n    //     ctx.fillRect(this.xPos+this.spriteWidth , this.yPos+this.spriteHeight, this.spriteWidth , this.spriteHeight);\n    // }\n  }\n\n  move(dir, ctx) {\n    const newXPos = Math.floor(this.xPos + dir[0] + this.spriteWidth);\n    const newYPos = Math.floor(this.yPos + dir[1]);\n    if (newXPos >= 0 && newXPos <= ctx.canvas.width - this.spriteWidth && newYPos >= 0 && newYPos <= ctx.canvas.height - this.spriteHeight) {\n      this.xPos += dir[0];\n      this.yPos += dir[1];\n    }\n  }\n  enemyMove(dir, ctx) {\n    // const newXPos = Math.floor(this.xPos + dir[0] + this.spriteWidth);\n    // const newYPos = Math.floor(this.yPos + dir[1] + this.spriteHeight);\n    this.xPos += dir[0];\n    this.yPos += dir[1];\n  }\n\n  //usually for enemies\n  collidesWith(player) {\n    const overlap = (a, b) => {\n      if (a.xPos > b.xPos + b.spriteWidth || a.xPos + a.spriteWidth < b.xPos) return false;\n      if (a.yPos > b.yPos + b.spriteHeight || a.yPos + a.spriteHeight < b.yPos) return false;\n      return true;\n    };\n    let collision = false;\n    if (overlap(this, player)) {\n      collision = true;\n    }\n    return collision;\n  }\n  moveAir(ctx) {\n    this.isMidAir = true;\n    if (this.yPos < 0) {\n      this.yPos = 0;\n      this.vel = 0;\n    } else {\n      if (this.yPos + this.spriteHeight >= ctx.canvas.height) {\n        this.yPos = ctx.canvas.height - this.spriteHeight;\n        this.isAlive = false;\n        this.sprite = '../src/space_balloon_images/space_balloon_death.png';\n      } else {\n        this.yPos += this.vel;\n      }\n    }\n    this.vel += CONSTANTS.GRAVITY;\n    if (Math.abs(this.vel) > CONSTANTS.TERMINAL_VEL) {\n      if (this.vel > 0) {\n        this.vel = CONSTANTS.TERMINAL_VEL;\n      } else {\n        this.vel = CONSTANTS.TERMINAL_VEL * -1;\n      }\n    }\n  }\n  mash() {\n    return CONSTANTS.BAR_SPEED;\n  }\n  flap() {\n    this.vel = -1 * CONSTANTS.FLAP_SPEED;\n    this.sprite = '../src/space_balloon_images/flap_down.png';\n    const that = this;\n    setTimeout(function () {\n      that.sprite = '../src/space_balloon_images/flap_up.png';\n    }, 100);\n    setTimeout(function () {\n      that.sprite = '../src/space_balloon_images/flap_default.png';\n    }, 200);\n  }\n  ddr(dir) {\n    this.userInputs.push(dir);\n  }\n}\nconst CONSTANTS = {\n  GRAVITY: 0.2,\n  FLAP_SPEED: 5,\n  TERMINAL_VEL: 5,\n  BAR_SPEED: 5\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sprite);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./mayhem_overload/sprite.js\n");

/***/ }),

/***/ "./mayhem_overload/stage.js":
/*!**********************************!*\
  !*** ./mayhem_overload/stage.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Stage {\n  constructor(stage, isAnimated) {\n    this.stage = stage;\n    this.isAnimated = isAnimated;\n  }\n  animate(ctx) {\n    if (this.stage) {\n      let image = new Image();\n      image.src = this.stage;\n      const that = this;\n      if (this.isAnimated) {\n        image.onload = function () {\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          shiftX -= 2;\n          if (shiftX <= 0) {\n            shiftX = 200;\n            shiftY += ctx.canvas.height;\n            if (shiftY >= image.height) {\n              shiftY = 0;\n            }\n          }\n          ctx.drawImage(image, shiftX, shiftY, 50, 200, 0, 0, ctx.canvas.width, ctx.canvas.height);\n        };\n      } else {\n        image.onload = function () {\n          ctx.drawImage(image, 0, 0, ctx.canvas.width, ctx.canvas.height);\n        };\n      }\n    } else {\n      ctx.fillStyle = \"skyblue\";\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stage);\nvar shiftX = 200;\nvar shiftY = 0;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9tYXloZW1fb3ZlcmxvYWQvc3RhZ2UuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLEtBQUssQ0FBQztFQUVSQyxXQUFXLENBQUNDLEtBQUssRUFBRUMsVUFBVSxFQUFDO0lBQzFCLElBQUksQ0FBQ0QsS0FBSyxHQUFHQSxLQUFLO0lBQ2xCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQSxVQUFVO0VBRWhDO0VBRUFDLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFO0lBQ1QsSUFBRyxJQUFJLENBQUNILEtBQUssRUFBRTtNQUNYLElBQUlJLEtBQUssR0FBRyxJQUFJQyxLQUFLLEVBQUU7TUFDdkJELEtBQUssQ0FBQ0UsR0FBRyxHQUFHLElBQUksQ0FBQ04sS0FBSztNQUN0QixNQUFNTyxJQUFJLEdBQUcsSUFBSTtNQUNqQixJQUFHLElBQUksQ0FBQ04sVUFBVSxFQUFFO1FBQ2hCRyxLQUFLLENBQUNJLE1BQU0sR0FBRyxZQUFXO1VBQ3RCTCxHQUFHLENBQUNNLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFTixHQUFHLENBQUNPLE1BQU0sQ0FBQ0MsS0FBSyxFQUFFUixHQUFHLENBQUNPLE1BQU0sQ0FBQ0UsTUFBTSxDQUFDO1VBQ3hEQyxNQUFNLElBQUksQ0FBQztVQUNYLElBQUdBLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDWkEsTUFBTSxHQUFHLEdBQUc7WUFDWkMsTUFBTSxJQUFJWCxHQUFHLENBQUNPLE1BQU0sQ0FBQ0UsTUFBTTtZQUMzQixJQUFHRSxNQUFNLElBQUlWLEtBQUssQ0FBQ1EsTUFBTSxFQUFFO2NBQ3ZCRSxNQUFNLEdBQUcsQ0FBQztZQUNkO1VBQ0o7VUFDQVgsR0FBRyxDQUFDWSxTQUFTLENBQUNYLEtBQUssRUFBRVMsTUFBTSxFQUFFQyxNQUFNLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFDeEMsQ0FBQyxFQUFFLENBQUMsRUFBRVgsR0FBRyxDQUFDTyxNQUFNLENBQUNDLEtBQUssRUFBRVIsR0FBRyxDQUFDTyxNQUFNLENBQUNFLE1BQU0sQ0FBQztRQUVsRCxDQUFDO01BQ0wsQ0FBQyxNQUNJO1FBQ0RSLEtBQUssQ0FBQ0ksTUFBTSxHQUFHLFlBQVc7VUFDdEJMLEdBQUcsQ0FBQ1ksU0FBUyxDQUFDWCxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBQ0QsR0FBRyxDQUFDTyxNQUFNLENBQUNDLEtBQUssRUFBQ1IsR0FBRyxDQUFDTyxNQUFNLENBQUNFLE1BQU0sQ0FBQztRQUNqRSxDQUFDO01BQ0w7SUFDSixDQUFDLE1BQ0k7TUFDRFQsR0FBRyxDQUFDYSxTQUFTLEdBQUcsU0FBUztNQUN6QmIsR0FBRyxDQUFDYyxRQUFRLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQ2QsR0FBRyxDQUFDTyxNQUFNLENBQUNDLEtBQUssRUFBQ1IsR0FBRyxDQUFDTyxNQUFNLENBQUNFLE1BQU0sQ0FBQztJQUN4RDtFQUNKO0FBRUo7QUFDQSwrREFBZWQsS0FBSyxFQUFDO0FBQ3JCLElBQUllLE1BQU0sR0FBRyxHQUFHO0FBQ2hCLElBQUlDLE1BQU0sR0FBRyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW50aXRsZWQtZ2FtZS1vZi1taWNyb2dhbWVzLy4vbWF5aGVtX292ZXJsb2FkL3N0YWdlLmpzP2E3NjQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU3RhZ2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHN0YWdlLCBpc0FuaW1hdGVkKXtcclxuICAgICAgICB0aGlzLnN0YWdlID0gc3RhZ2U7XHJcbiAgICAgICAgdGhpcy5pc0FuaW1hdGVkID0gaXNBbmltYXRlZDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgYW5pbWF0ZShjdHgpIHtcclxuICAgICAgICBpZih0aGlzLnN0YWdlKSB7XHJcbiAgICAgICAgICAgIGxldCBpbWFnZSA9IG5ldyBJbWFnZSgpXHJcbiAgICAgICAgICAgIGltYWdlLnNyYyA9IHRoaXMuc3RhZ2U7XHJcbiAgICAgICAgICAgIGNvbnN0IHRoYXQgPSB0aGlzO1xyXG4gICAgICAgICAgICBpZih0aGlzLmlzQW5pbWF0ZWQpIHtcclxuICAgICAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY3R4LmNhbnZhcy53aWR0aCwgY3R4LmNhbnZhcy5oZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNoaWZ0WCAtPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHNoaWZ0WCA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoaWZ0WCA9IDIwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2hpZnRZICs9IGN0eC5jYW52YXMuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihzaGlmdFkgPj0gaW1hZ2UuaGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGlmdFkgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIHNoaWZ0WCwgc2hpZnRZLCA1MCwgMjAwLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgMCwgMCwgY3R4LmNhbnZhcy53aWR0aCwgY3R4LmNhbnZhcy5oZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDAsY3R4LmNhbnZhcy53aWR0aCxjdHguY2FudmFzLmhlaWdodCk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJza3libHVlXCI7XHJcbiAgICAgICAgICAgIGN0eC5maWxsUmVjdCgwLDAsY3R4LmNhbnZhcy53aWR0aCxjdHguY2FudmFzLmhlaWdodCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5leHBvcnQgZGVmYXVsdCBTdGFnZTtcclxudmFyIHNoaWZ0WCA9IDIwMDtcclxudmFyIHNoaWZ0WSA9IDA7Il0sIm5hbWVzIjpbIlN0YWdlIiwiY29uc3RydWN0b3IiLCJzdGFnZSIsImlzQW5pbWF0ZWQiLCJhbmltYXRlIiwiY3R4IiwiaW1hZ2UiLCJJbWFnZSIsInNyYyIsInRoYXQiLCJvbmxvYWQiLCJjbGVhclJlY3QiLCJjYW52YXMiLCJ3aWR0aCIsImhlaWdodCIsInNoaWZ0WCIsInNoaWZ0WSIsImRyYXdJbWFnZSIsImZpbGxTdHlsZSIsImZpbGxSZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./mayhem_overload/stage.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mayhem_overload_microgame_board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mayhem_overload/microgame_board */ \"./mayhem_overload/microgame_board.js\");\n// import Game from \"../mayhem_overload/game\";\n// import View from \"../mayhem_overload/view\";\n\nconst canvas = document.querySelector(\"#canvas\");\nconst gameContainer = document.querySelector(\"#game_container\");\ncanvas.width = gameContainer.offsetWidth;\ncanvas.height = gameContainer.offsetHeight;\nconst startBtn = document.querySelector(\"#startButton\");\nconst func = function () {\n  startBtn.disabled = true;\n  document.querySelector(\"#canvas\").style.zIndex = 2;\n  const gameBoard = new _mayhem_overload_microgame_board__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  gameBoard.play();\n};\nstartBtn.addEventListener(\"click\", func);\n\n// key('q', () => {\n//     for(const audio of audioArr) {\n//         audio.pause();\n//         audio.currentTime = 0;\n//     }\n//     this.restart = true;\n//     bindKeys.push('q');\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ2dFO0FBRWhFLE1BQU1DLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsU0FBUyxDQUFDO0FBQ2hELE1BQU1DLGFBQWEsR0FBR0YsUUFBUSxDQUFDQyxhQUFhLENBQUMsaUJBQWlCLENBQUM7QUFDL0RGLE1BQU0sQ0FBQ0ksS0FBSyxHQUFHRCxhQUFhLENBQUNFLFdBQVc7QUFDeENMLE1BQU0sQ0FBQ00sTUFBTSxHQUFHSCxhQUFhLENBQUNJLFlBQVk7QUFFMUMsTUFBTUMsUUFBUSxHQUFHUCxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7QUFDdkQsTUFBTU8sSUFBSSxHQUFHLFlBQVk7RUFDckJELFFBQVEsQ0FBQ0UsUUFBUSxHQUFHLElBQUk7RUFDeEJULFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDUyxLQUFLLENBQUNDLE1BQU0sR0FBRyxDQUFDO0VBQ2xELE1BQU1DLFNBQVMsR0FBRyxJQUFJZCx3RUFBYyxFQUFFO0VBQ3RDYyxTQUFTLENBQUNDLElBQUksRUFBRTtBQUNwQixDQUFDO0FBQ0ROLFFBQVEsQ0FBQ08sZ0JBQWdCLENBQUMsT0FBTyxFQUFFTixJQUFJLENBQUM7O0FBS3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bnRpdGxlZC1nYW1lLW9mLW1pY3JvZ2FtZXMvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgR2FtZSBmcm9tIFwiLi4vbWF5aGVtX292ZXJsb2FkL2dhbWVcIjtcclxuLy8gaW1wb3J0IFZpZXcgZnJvbSBcIi4uL21heWhlbV9vdmVybG9hZC92aWV3XCI7XHJcbmltcG9ydCBNaWNyb2dhbWVCb2FyZCBmcm9tIFwiLi4vbWF5aGVtX292ZXJsb2FkL21pY3JvZ2FtZV9ib2FyZFwiO1xyXG5cclxuY29uc3QgY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYW52YXNcIik7XHJcbmNvbnN0IGdhbWVDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dhbWVfY29udGFpbmVyXCIpO1xyXG5jYW52YXMud2lkdGggPSBnYW1lQ29udGFpbmVyLm9mZnNldFdpZHRoO1xyXG5jYW52YXMuaGVpZ2h0ID0gZ2FtZUNvbnRhaW5lci5vZmZzZXRIZWlnaHQ7XHJcblxyXG5jb25zdCBzdGFydEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3RhcnRCdXR0b25cIik7XHJcbmNvbnN0IGZ1bmMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBzdGFydEJ0bi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhbnZhc1wiKS5zdHlsZS56SW5kZXggPSAyO1xyXG4gICAgY29uc3QgZ2FtZUJvYXJkID0gbmV3IE1pY3JvZ2FtZUJvYXJkKCk7XHJcbiAgICBnYW1lQm9hcmQucGxheSgpO1xyXG59XHJcbnN0YXJ0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jKTtcclxuXHJcblxyXG5cclxuXHJcbi8vIGtleSgncScsICgpID0+IHtcclxuLy8gICAgIGZvcihjb25zdCBhdWRpbyBvZiBhdWRpb0Fycikge1xyXG4vLyAgICAgICAgIGF1ZGlvLnBhdXNlKCk7XHJcbi8vICAgICAgICAgYXVkaW8uY3VycmVudFRpbWUgPSAwO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgdGhpcy5yZXN0YXJ0ID0gdHJ1ZTtcclxuLy8gICAgIGJpbmRLZXlzLnB1c2goJ3EnKTtcclxuLy8gfSk7Il0sIm5hbWVzIjpbIk1pY3JvZ2FtZUJvYXJkIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2FtZUNvbnRhaW5lciIsIndpZHRoIiwib2Zmc2V0V2lkdGgiLCJoZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJzdGFydEJ0biIsImZ1bmMiLCJkaXNhYmxlZCIsInN0eWxlIiwiekluZGV4IiwiZ2FtZUJvYXJkIiwicGxheSIsImFkZEV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bnRpdGxlZC1nYW1lLW9mLW1pY3JvZ2FtZXMvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;